name: CI
on: [push, pull_request]
jobs:
  rustfmt:
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3
      - name: rustup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          components: rustfmt
      - name: cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  clippy:
    runs-on: windows-2022
    steps:
      - name: checkout
        uses: actions/checkout@v3
      # TODO: Remove this step when https://github.com/actions/virtual-environments/issues/5143 is fixed
      - name: install Microsoft.VisualStudio.Component.VC.Redist.MSM
        run: |
          Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
          $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          $componentsToAdd = @(
            "Microsoft.VisualStudio.Component.VC.Redist.MSM"
          )
          [string]$workloadArgs = $componentsToAdd | ForEach-Object {" --add " +  $_}
          $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$workloadArgs, '--quiet', '--norestart', '--nocache')
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
          if ($process.ExitCode -eq 0)
          {
              Write-Host "components have been successfully added"
          }
          else
          {
              Write-Host "components were not installed"
              exit 1
          }
      - name: rustup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: clippy
      - name: cargo clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets -- -D warnings
  build:
    # We can't use windows-latest because it currently (2022-01-09) points to Windows Server 2019
    # And we can't use 2019 because it doesn't have `wsl --export`
    #
    # Note that `wsldl backup` also depends on `wsl --export`,
    # so it can't be used as a workaround:
    # https://github.com/yuk7/wsldl/issues/116
    runs-on: windows-2022
    steps:
      - name: checkout
        uses: actions/checkout@v3
      # TODO: Remove this step when https://github.com/actions/virtual-environments/issues/5143 is fixed
      - name: install Microsoft.VisualStudio.Component.VC.Redist.MSM
        run: |
          Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
          $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          $componentsToAdd = @(
            "Microsoft.VisualStudio.Component.VC.Redist.MSM"
          )
          [string]$workloadArgs = $componentsToAdd | ForEach-Object {" --add " +  $_}
          $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$workloadArgs, '--quiet', '--norestart', '--nocache')
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
          if ($process.ExitCode -eq 0)
          {
              Write-Host "components have been successfully added"
          }
          else
          {
              Write-Host "components were not installed"
              exit 1
          }
      - name: rustup
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: cargo install wix
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: cargo-wix
      - name: cargo wix
        uses: actions-rs/cargo@v1
        with:
          command: wix
          args: --nocapture
      - name: upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: package
          path: target/wix/*.msi
      - name: publish to gh-releases
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/wix/*.msi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: publish to chocolatey.org
        if: startsWith(github.ref, 'refs/tags/')
        run: .\choco-publish.ps1 ${env:GITHUB_REF} ${env:CHOCOLATEY_APIKEY}
        env:
          CHOCOLATEY_APIKEY: ${{ secrets.CHOCOLATEY_APIKEY }}
