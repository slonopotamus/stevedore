<?xml version='1.0' encoding='windows-1252'?>
<!--
  Copyright (C) 2017 Christopher R. Field.

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!--
  The "cargo wix" subcommand provides a variety of predefined variables available
  for customization of this template. The values for each variable are set at
  installer creation time. The following variables are available:

  TargetTriple      = The rustc target triple name.
  TargetEnv         = The rustc target environment. This is typically either
                      "msvc" or "gnu" depending on the toolchain downloaded and
                      installed.
  TargetVendor      = The rustc target vendor. This is typically "pc", but Rust
                      does support other vendors, like "uwp".
  CargoTargetBinDir = The complete path to the binary (exe). The default would
                      be "target\release\<BINARY_NAME>.exe" where
                      "<BINARY_NAME>" is replaced with the name of each binary
                      target defined in the package's manifest (Cargo.toml). If
                      a different rustc target triple is used than the host,
                      i.e. cross-compiling, then the default path would be
                      "target\<CARGO_TARGET>\<CARGO_PROFILE>\<BINARY_NAME>.exe",
                      where "<CARGO_TARGET>" is replaced with the "CargoTarget"
                      variable value and "<CARGO_PROFILE>" is replaced with the
                      value from the `CargoProfile` variable.
  CargoTargetDir    = The path to the directory for the build artifacts, i.e.
                      "target".
  CargoProfile      = Either "debug" or `release` depending on the build
                      profile. The default is "release".
  Version           = The version for the installer. The default is the
                      "Major.Minor.Fix" semantic versioning number of the Rust
                      package.
-->

<!--
  Please do not remove these pre-processor If-Else blocks. These are used with
  the `cargo wix` subcommand to automatically determine the installation
  destination for 32-bit versus 64-bit installers. Removal of these lines will
  cause installation errors.
-->
<?if $(sys.BUILDARCH) = x64 or $(sys.BUILDARCH) = arm64 ?>
<?define PlatformProgramFilesFolder = "ProgramFiles64Folder" ?>
<?else ?>
<?define PlatformProgramFilesFolder = "ProgramFilesFolder" ?>
<?endif ?>

<Wix xmlns:util="http://schemas.microsoft.com/wix/UtilExtension" xmlns='http://schemas.microsoft.com/wix/2006/wi'>
    <Product
            Id='*'
            Name='Stevedore'
            UpgradeCode='9A68EC9C-B494-4CDD-B081-F074FE91BF0B'
            Manufacturer='Marat Radchenko'
            Language='1033'
            Codepage='1252'
            Version='$(var.Version)'>

        <Package Id='*'
                 Keywords='Installer'
                 Description='Docker distribution for Windows that Just Works'
                 Manufacturer='Marat Radchenko'
                 InstallerVersion='500'
                 Languages='1033'
                 Compressed='yes'
                 InstallScope='perMachine'
                 SummaryCodepage='1252'/>

        <MajorUpgrade
                AllowSameVersionUpgrades='yes'
                Schedule='afterInstallInitialize'
                DowngradeErrorMessage='A newer version of [ProductName] is already installed. Setup will now exit.'/>

        <Property Id="WINDOWSBUILDNUMBER" Secure="yes">
            <RegistrySearch Id="BuildNumberSearch" Root="HKLM" Key="SOFTWARE\Microsoft\Windows NT\CurrentVersion" Name="CurrentBuildNumber" Type="raw" />
        </Property>
        <Condition Message="This application is only supported on Windows 10 version 1809 (build 17763) or newer.">
            <![CDATA[(WINDOWSBUILDNUMBER >= 17763)]]>
        </Condition>

        <Media Id='1' Cabinet='media1.cab' EmbedCab='yes' DiskPrompt='CD-ROM #1'/>
        <Property Id='DiskPrompt' Value='Stevedore Installation'/>

        <Property Id='SERVICENAME' Value='stevedore'/>

        <Property Id="DISABLEADVTSHORTCUTS" Value="1"/>

        <util:Group Id="DockerGroup" Name="docker-users"/>

        <Directory Id='TARGETDIR' Name='SourceDir'>
            <Directory Id='$(var.PlatformProgramFilesFolder)' Name='PFiles'>
                <Directory Id='INSTALLDIR' Name='Stevedore'>
                    <Component Id='License' Guid='eddd457c-28be-4d34-9c84-acd6e15a92a0'>
                        <File Source='wix\License.rtf'/>
                    </Component>

                    <Component Id='dockerd_Comp' Guid='7adbeefe-d5cb-4977-aba0-8f6869c0da87'>
                        <!--
                            TODO: consider fixing WiX or replacing this with custom code
                            Already encountered issues:
                            1. WiX cannot create a group (so we do it by hand with Powershell)
                            2. WiX doesn't properly handle special accounts like SYSTEM (so we have Vital=no)
                            3. WiX tries to DELETE user if it couldn't determine whether user exists.
                               This is not an issue for SYSTEM (you can't delete what doesn't exists),
                               but sounds very dangerous in general case.
                               See https://github.com/wixtoolset/wix3/blob/wix3112rtm/src/ext/ca/serverca/scasched/scauser.cpp#L556
                            -->
                        <util:User
                                Id="DockerUser"
                                Domain="[%USERDOMAIN]"
                                Name="[%USERNAME]"
                                CreateUser="no"
                                RemoveOnUninstall="no"
                                Vital="no">
                            <util:GroupRef Id="DockerGroup"/>
                        </util:User>
                        <File Source='target\$(var.Profile)\docker\dockerd.exe'/>
                        <!-- See https://github.com/moby/moby/blob/v23.0.0/cmd/dockerd/service_windows.go#L156-L202 -->
                        <ServiceInstall
                                Arguments='--run-service --service-name [SERVICENAME] --group docker-users --host npipe:////./pipe/dockerDesktopWindowsEngine --host npipe:////./pipe/docker_engine'
                                DisplayName='Stevedore'
                                ErrorControl='normal'
                                Id='dockerd_install'
                                Name='[SERVICENAME]'
                                Start='auto'
                                Type='ownProcess'>
                            <ServiceDependency Id="EventLog"/>
                            <util:ServiceConfig
                                    FirstFailureActionType="restart"
                                    SecondFailureActionType="restart"
                                    ThirdFailureActionType="none"
                                    ResetPeriodInDays="1"
                                    RestartServiceDelayInSeconds="15"/>
                        </ServiceInstall>
                        <ServiceControl
                                Id='dockerd_start'
                                Name='[SERVICENAME]'
                                Remove='uninstall'
                                Stop='both'
                                Wait='yes'/>
                        <util:EventSource
                                Name="[SERVICENAME]"
                                Log="[SERVICENAME]"
                                EventMessageFile="[INSTALLDIR]\dockerd.exe"
                                SupportsErrors="yes"
                                SupportsInformationals="yes"
                                SupportsWarnings="yes"/>
                    </Component>

                    <Directory Id='bin' Name='bin'>
                        <Component Id='bin_Comp' Guid="e68f9ac8-53cc-378f-8c95-589bab7d0b21">
                            <File Source='target\$(var.Profile)\docker\docker.exe'/>
                            <File Source='target\$(var.Profile)\docker\docker-proxy.exe'/>
                            <File Source='target\$(var.Profile)\docker-credential-wincred.exe'/>
                            <File Id='docker_compose_v1.exe' Name="docker-compose.exe"
                                  Source='target\$(var.Profile)\docker-compose.exe'/>
                            <Environment Id="PATH"
                                         Action="set"
                                         Name="PATH"
                                         Value="[INSTALLDIR]\bin"
                                         Part="last"
                                         Permanent="no"
                                         System="yes"/>
                        </Component>
                    </Directory>
                </Directory>
                <Directory Id="Docker" Name="Docker">
                    <Directory Id='cli_plugins' Name='cli-plugins'>
                        <Component Id='cli_plugins_Comp' Guid='a0307534-d554-3265-ac67-19d45951fd96'>
                            <File Source='target\$(var.Profile)\docker-compose.exe'/>
                            <File Source='target\$(var.Profile)\docker-scan.exe'/>
                        </Component>
                    </Directory>
                </Directory>
            </Directory>

            <Directory Id='ProgramMenuFolder'>
            </Directory>

            <Directory Id='DesktopFolder'>
            </Directory>
        </Directory>

        <Feature
                Id='FeatureMain'
                Title='Stevedore'
                Description='Installs Docker CLI executables and license file.'
                ConfigurableDirectory='INSTALLDIR'
                AllowAdvertise='no'
                Display='expand'
                Absent='disallow'>

            <ComponentRef Id='License'/>
            <ComponentRef Id='bin_Comp'/>
            <ComponentRef Id='cli_plugins_Comp'/>
            <ComponentRef Id='dockerd_Comp'/>

            <Feature
                    Id='FeatureHyperV'
                    Title='Hyper-V'
                    Description='Installs Hyper-V optional Windows component. It allows running Docker containers with Hyper-V isolation.'
                    AllowAdvertise='no'
                    Display='expand'>
                <!-- Dummy component to get rid of the "run from network" option  -->
                <ComponentRef Id='License'/>
            </Feature>
        </Feature>

        <Property Id='POWERSHELLEXE' Value='C:\Windows\sysnative\WindowsPowerShell\v1.0\powershell.exe'/>

        <SetProperty Id='CreateDockerGroup'
                     Before='CreateDockerGroup'
                     Sequence='execute'
                     Value="&quot;[POWERSHELLEXE]&quot; -Command &quot;(Get-LocalGroup -Name docker-users) -or (New-LocalGroup -Name docker-users -Description 'Users of Docker Desktop')&quot;"/>

        <CustomAction Id='CreateDockerGroup'
                      BinaryKey='WixCA'
                      DllEntry='WixQuietExec'
                      Execute='deferred'
                      Return='check'
                      Impersonate='no'/>

        <SetProperty Id='InstallContainersFeature'
                     Before='InstallContainersFeature'
                     Sequence='execute'
                     Value="&quot;[POWERSHELLEXE]&quot; -Command &quot;Enable-WindowsOptionalFeature -Online -FeatureName Containers -All -NoRestart&quot;"/>

        <CustomAction Id='InstallContainersFeature' BinaryKey='WixCA' DllEntry='WixQuietExec' Execute='deferred'
                      Return='check' Impersonate='no'/>

        <SetProperty Id='InstallHyperVFeature'
                     Before='InstallHyperVFeature'
                     Sequence='execute'
                     Value="&quot;[POWERSHELLEXE]&quot; -Command &quot;Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Hyper-V -All -NoRestart&quot;"/>

        <CustomAction Id='InstallHyperVFeature' BinaryKey='WixCA' DllEntry='WixQuietExec' Execute='deferred'
                      Return='check' Impersonate='no'/>

        <!-- See https://stackoverflow.com/a/17608049 for conditions -->
        <InstallExecuteSequence>
            <Custom Action='InstallContainersFeature' Before='ConfigureUsers'>
                <![CDATA[
                NOT REMOVE
                ]]>
            </Custom>
            <Custom Action='InstallHyperVFeature' Before='ConfigureUsers'>
                <![CDATA[
                (&FeatureHyperV = 3) AND (NOT REMOVE)
                ]]>
            </Custom>
            <Custom Action='CreateDockerGroup' Before='ConfigureUsers'>
                <![CDATA[
                NOT REMOVE
                ]]>
            </Custom>
            <ScheduleReboot After="InstallFinalize">
                <![CDATA[
                NOT REMOVE
                ]]>
            </ScheduleReboot>
        </InstallExecuteSequence>

        <SetProperty Id='ARPINSTALLLOCATION' Value='[INSTALLDIR]' After='CostFinalize'/>

        <Icon Id='stevedore.ico' SourceFile='resources/stevedore.ico'/>
        <Property Id='ARPPRODUCTICON' Value='stevedore.ico'/>

        <Property Id='ARPHELPLINK' Value='https://github.com/slonopotamus/stevedore'/>

        <UI>
            <UIRef Id='WixUI_FeatureTree'/>
            <ProgressText Action="InstallContainersFeature">Enabling Containers feature</ProgressText>
            <ProgressText Action="InstallHyperVFeature">Enabling Hyper-V feature</ProgressText>
        </UI>

        <WixVariable Id='WixUILicenseRtf' Value='wix/License.rtf'/>
        <WixVariable Id='WixUIBannerBmp' Value='wix/Banner.bmp'/>
        <WixVariable Id='WixUIDialogBmp' Value='wix/Dialog.bmp'/>
    </Product>
</Wix>
